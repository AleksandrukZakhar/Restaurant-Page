"use strict";(self.webpackChunkRestaurant_Page=self.webpackChunkRestaurant_Page||[]).push([[826],{99:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans&display=swap);"]),i.push([e.id,'*{margin:0;padding:0;box-sizing:border-box;font-family:"Open Sans",sans-serif;color:#fff}body{overflow:hidden}header{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-wrap:wrap;background-color:#000;height:2.5rem;padding:0 2rem}.logo{margin-right:auto;font-size:1.2rem}.link-container{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-wrap:wrap;gap:2rem}.link-container>p>a{display:block;text-decoration:none;color:#fff}.link-container>p>a:hover{transform:translateY(5px);transition:.2s ease-in-out}main{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-wrap:wrap;width:100vw;height:96vh;background-color:rgba(0,0,0,.4)}main>img{width:100%;height:100%;object-fit:cover;position:absolute;z-index:-1}.menu-main{background-color:#fff}.container{display:flex;flex-direction:column;justify-content:center;align-items:center;flex-wrap:wrap}button{border:0;border-radius:25px;background-color:#00c;width:10rem;height:2rem}button:hover{transform:scale(1.1);transition:.3s ease-in-out}.title{font-size:6rem}.pizza-container{display:grid;grid-template-columns:repeat(3, 400px);grid-auto-rows:400px;gap:2rem}.pizza-container>img{width:400px;height:400px;object-fit:cover}.pizza-container>img:hover{transition:.3s ease-in-out;transform:scale(1.05)}form{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-wrap:wrap;width:100vw;height:96vh}form>div{display:flex;flex-direction:column;justify-content:center;align-items:center;flex-wrap:wrap;gap:2rem}form>div>input{border:0;background-color:#000;width:200px;height:40px;color:#fff;border-radius:10px;text-align:center}form>div>input::placeholder{color:#fff;text-align:center}',"",{version:3,sources:["webpack://./src/styles.scss"],names:[],mappings:"AAkBA,EACE,QAAA,CACA,SAAA,CACA,qBAAA,CACA,kCAAA,CACA,UAPc,CAUhB,KACE,eAAA,CAGF,OAtBE,YAAA,CACA,kBANY,CAOZ,sBAqBwB,CApBxB,kBAoBwC,CAnBxC,cAAA,CAqBA,qBAlBc,CAmBd,aAAA,CACA,cAAA,CAGF,MACE,iBAAA,CACA,gBAAA,CAGF,gBAnCE,YAAA,CACA,kBANY,CAOZ,sBAkCwB,CAjCxB,kBAiCwC,CAhCxC,cAAA,CAkCA,QAAA,CAGF,oBACE,aAAA,CACA,oBAAA,CACA,UApCc,CAsCd,0BACE,yBAAA,CACA,0BAAA,CAIJ,KApDE,YAAA,CACA,kBANY,CAOZ,sBAmDwB,CAlDxB,kBAkDwC,CAjDxC,cAAA,CAmDA,WAAA,CACA,WAAA,CACA,+BAAA,CAEA,SACE,UAAA,CACA,WAAA,CACA,gBAAA,CACA,iBAAA,CACA,UAAA,CAIJ,WACE,qBA7Dc,CAgEhB,WAxEE,YAAA,CACA,qBAwEc,CAvEd,sBAuEsB,CAtEtB,kBAsE8B,CArE9B,cAAA,CAwEF,OACE,QAAA,CACA,kBAAA,CACA,qBAAA,CACA,WAAA,CACA,WAAA,CAEA,aACE,oBAAA,CACA,0BAAA,CAIJ,OACE,cAAA,CAGF,iBACE,YAAA,CACA,sCAAA,CACA,oBAAA,CACA,QAAA,CAEA,qBACE,WAAA,CACA,YAAA,CACA,gBAAA,CAEA,2BACE,0BAAA,CACA,qBAAA,CAKN,KA/GE,YAAA,CACA,kBANY,CAOZ,sBA8GwB,CA7GxB,kBA6GwC,CA5GxC,cAAA,CA8GA,WAAA,CACA,WAAA,CAEA,SArHA,YAAA,CACA,qBAqHgB,CApHhB,sBAoHwB,CAnHxB,kBAmHgC,CAlHhC,cAAA,CAoHE,QAAA,CAEA,eACE,QAAA,CACA,qBArHU,CAsHV,WAAA,CACA,WAAA,CACA,UAvHU,CAwHV,kBAAA,CACA,iBAAA,CAEA,4BACE,UA5HQ,CA6HR,iBAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Open+Sans&display=swap");\n\n@mixin flex(\n  $direction: row,\n  $content: flex-start,\n  $items: stretch,\n  $wrap: nowrap\n) {\n  display: flex;\n  flex-direction: $direction;\n  justify-content: $content;\n  align-items: $items;\n  flex-wrap: wrap;\n}\n\n$black-primary: hsl(0, 0%, 0%);\n$white-primary: hsl(0, 0%, 100%);\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: "Open Sans", sans-serif;\n  color: $white-primary;\n}\n\nbody {\n  overflow: hidden;\n}\n\nheader {\n  @include flex($content: center, $items: center);\n\n  background-color: $black-primary;\n  height: 2.5rem;\n  padding: 0 2rem;\n}\n\n.logo {\n  margin-right: auto;\n  font-size: 1.2rem;\n}\n\n.link-container {\n  @include flex($content: center, $items: center);\n\n  gap: 2rem;\n}\n\n.link-container > p > a {\n  display: block;\n  text-decoration: none;\n  color: $white-primary;\n\n  &:hover {\n    transform: translateY(5px);\n    transition: 0.2s ease-in-out;\n  }\n}\n\nmain {\n  @include flex($content: center, $items: center);\n\n  width: 100vw;\n  height: 96vh;\n  background-color: hsl(0, 0%, 0%, 0.4);\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    position: absolute;\n    z-index: -1;\n  }\n}\n\n.menu-main {\n  background-color: $white-primary;\n}\n\n.container {\n  @include flex(column, center, center);\n}\n\nbutton {\n  border: 0;\n  border-radius: 25px;\n  background-color: hsl(240, 100%, 40%);\n  width: 10rem;\n  height: 2rem;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: 0.3s ease-in-out;\n  }\n}\n\n.title {\n  font-size: 6rem;\n}\n\n.pizza-container {\n  display: grid;\n  grid-template-columns: repeat(3, 400px);\n  grid-auto-rows: 400px;\n  gap: 2rem;\n\n  & > img {\n    width: 400px;\n    height: 400px;\n    object-fit: cover;\n\n    &:hover {\n      transition: 0.3s ease-in-out;\n      transform: scale(1.05);\n    }\n  }\n}\n\nform {\n  @include flex($content: center, $items: center);\n\n  width: 100vw;\n  height: 96vh;\n\n  & > div {\n    @include flex(column, center, center);\n\n    gap: 2rem;\n\n    & > input {\n      border: 0;\n      background-color: $black-primary;\n      width: 200px;\n      height: 40px;\n      color: $white-primary;\n      border-radius: 10px;\n      text-align: center;\n\n      &::placeholder {\n        color: $white-primary;\n        text-align: center;\n      }\n    }\n  }\n}\n'],sourceRoot:""}]);const A=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],A=0;A<e.length;A++){var c=e[A],s=r.base?c[0]+r.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var p=t(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(C);else{var u=o(C,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=t(a[i]);n[A].references--}for(var c=r(e,o),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},627:(e,n,t)=>{var r=t(379),o=t.n(r),a=t(795),i=t.n(a),A=t(569),c=t.n(A),s=t(565),l=t.n(s),d=t(216),p=t.n(d),C=t(589),u=t.n(C),m=t(99),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),o()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=t.p+"43cec658b73b0999accf.jpg",g=t.p+"3697d2acb838c64d9ead.jpg",x=t.p+"bdb755a8d231f6bbe872.jpg",b=t.p+"eb95249dca3373bce71c.jpg",v=t.p+"c0c235278a5df553db33.jpg",B=t.p+"3512c04b1deb77a6d3fb.jpg",w=t.p+"050f22015bb848c79c98.jpg",y=()=>{const e=document.createElement("main"),n=new Image;n.src=h,n.alt="background",e.appendChild(n);const t=document.createElement("div");t.classList.add("container"),e.appendChild(t);const r=document.createElement("h1");r.textContent="Restaurant",r.classList.add("title"),t.appendChild(r);const o=document.createElement("p");o.textContent="This is awesome restaurant",t.appendChild(o);const a=document.createElement("button");return a.textContent="Order Now",t.appendChild(a),e};let E=y();const k=()=>{const e=document.createElement("main");e.classList.add("menu-main");const n=document.createElement("div");n.classList.add("pizza-container"),e.appendChild(n);const t=["",g,x,b,v,B,w];for(let e=1;e<7;e++){const r=new Image;r.src=t[e],r.alt=`pizza ${e}`,n.appendChild(r)}return e},j=()=>{const e=document.createElement("form"),n=document.createElement("div");e.appendChild(n);const t=[{placeholder:"Name",title:"Example: John"},{placeholder:"Surname",title:"Example: Doe"}];for(let e=0;e<2;e++){const r=document.createElement("input");r.type="text",r.placeholder=t[e].placeholder,r.pattern="/[a-z]/gi",r.title=t[e].title,n.appendChild(r)}const r=document.createElement("input");r.type="text",r.placeholder="Email",n.appendChild(r);const o=document.createElement("button");return o.textContent="Send",n.appendChild(o),e};document.body.appendChild((()=>{const e=document.createElement("header"),n=document.createElement("p");n.textContent="Restaurant",n.classList.add("logo"),e.appendChild(n);const t=document.createElement("div");t.classList.add("link-container"),e.appendChild(t);const r=["Home","Menu","Contact Us"],o=[y(),k(),j()];for(let e=0;e<3;e++){const n=document.createElement("p"),a=document.createElement("a");a.textContent=r[e],a.addEventListener("click",(()=>{const n=document.querySelector("main"),t=document.querySelector("form");null===t?document.body.removeChild(n):document.body.removeChild(t),E=o[e],document.body.appendChild(E)})),n.appendChild(a),t.appendChild(n)}return e})()),document.body.appendChild(E)}},e=>{e(e.s=627)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,